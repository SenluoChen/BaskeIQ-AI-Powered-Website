[33mcommit e96f6471270cf689533bfc78446bd1f4b107167f[m[33m ([m[1;32mrescue-main[m[33m)[m
Author: SenluoChen <ray191714@gmail.com>
Date:   Fri Aug 1 23:56:57 2025 +0200

    Get analyzis history

[1mdiff --git a/src/pages/MatchDetailPage.tsx b/src/pages/MatchDetailPage.tsx[m
[1mindex b81d157..a41d1ad 100644[m
[1m--- a/src/pages/MatchDetailPage.tsx[m
[1m+++ b/src/pages/MatchDetailPage.tsx[m
[36m@@ -10,12 +10,12 @@[m [mimport {[m
 } from '@mui/material';[m
 import { Bar } from 'react-chartjs-2';[m
 import { useParams } from 'react-router-dom';[m
[31m-import { useSelector } from 'react-redux';[m
[32m+[m[32mimport { useDispatch, useSelector } from 'react-redux';[m
 import { matchSelector } from '../store/selectors/matchSelector';[m
 import { useState, useMemo, useEffect } from 'react';[m
 import Court from '../components/Court/Court';[m
 import PlayerStatsLineChart from '../components/PlayerStatsLineChart/PlayerStatsLineChart';[m
[31m-[m
[32m+[m[32mimport { skipToken } from '@reduxjs/toolkit/query';[m
 import {[m
   Chart as ChartJS,[m
   BarElement,[m
[36m@@ -28,8 +28,9 @@[m [mimport {[m
 import { formatDateFromSeconds } from '../utils/data.utils';[m
 import { usePutMatchMutation } from '../store/api/MatchApi';[m
 import { QuarterStats } from '../types/Match.type';[m
[31m-import { usePostAnalyzeMatchResultMutation } from '../store/api/AnalyseApi';[m
[31m-import { MatchAnalysisResult } from '../types/Analysis.type';[m
[32m+[m[32mimport { useGetAnalyzesQuery, useLazyGetAnalyzesQuery, usePostAnalyzeMatchResultMutation } from '../store/api/AnalyseApi';[m
[32m+[m[32mimport { MatchAnalysis, MatchAnalysisResult } from '../types/Analysis.type';[m
[32m+[m[32mimport { setAnalyzes } from '../store/slices/analysisSlice';[m
 [m
 ChartJS.register([m
   BarElement,[m
[36m@@ -41,10 +42,10 @@[m [mChartJS.register([m
 );[m
 [m
 export default function MatchDetailPage() {[m
[32m+[m[32m  const dispatch = useDispatch();[m
   const { matchId } = useParams();[m
   const matches = useSelector(matchSelector).matches;[m
 [m
[31m-  // Get the match corresponding to matchId[m
   const match = useMemo(() => matches.find((m) => m.id === matchId), [matchId, matches]);[m
 [m
   const [scores, setScores] = useState([0, 0, 0, 0]);[m
[36m@@ -52,9 +53,14 @@[m [mexport default function MatchDetailPage() {[m
   const [phaseInput, setPhaseInput] = useState('');[m
   const [loading, setLoading] = useState(false);[m
   const [analysisResult, setAnalysisResult] = useState<MatchAnalysisResult | null>(null);[m
[32m+[m[32m  const [selectedAnalysis, setSelectedAnalysis] = useState<MatchAnalysis | null>(null);[m
 [m
   const [putMatch] = usePutMatchMutation();[m
   const [postAnalyzeMatchResult] = usePostAnalyzeMatchResultMutation();[m
[32m+[m[32m  const { data: analyzesData } = useGetAnalyzesQuery([m
[32m+[m[32m    match ? match.timestamp.toString() : skipToken[m
[32m+[m[32m  );[m
[32m+[m[32m  const [getAnalyzes] = useLazyGetAnalyzesQuery();[m
   const [statModalOpen, setStatModalOpen] = useState(false);[m
 [m
   const [formStats, setFormStats] = useState({[m
[36m@@ -79,7 +85,7 @@[m [mexport default function MatchDetailPage() {[m
 [m
   const handleSubmitStats = async () => {[m
     try {[m
[31m-      if(match) {[m
[32m+[m[32m      if (match) {[m
         await putMatch({[m
           timestamp: match.timestamp,[m
           turnovers: formStats.turnovers,[m
[36m@@ -94,6 +100,12 @@[m [mexport default function MatchDetailPage() {[m
     }[m
   };[m
 [m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    if (analyzesData?.items) {[m
[32m+[m[32m      dispatch(setAnalyzes(analyzesData.items));[m
[32m+[m[32m    }[m
[32m+[m[32m  }, [analyzesData, dispatch]);[m
[32m+[m
   useEffect(() => {[m
     if (match?.points) {[m
       const { q1 = 0, q2 = 0, q3 = 0, q4 = 0 } = match.points;[m
[36m@@ -101,11 +113,6 @@[m [mexport default function MatchDetailPage() {[m
     }[m
   }, [match?.points]);[m
 [m
[31m-  if (!match) {[m
[31m-    return <div>Match not found.</div>;[m
[31m-  }[m
[31m-[m
[31m-  // If no match found[m
   if (!match) {[m
     return ([m
       <Box p={4}>[m
[36m@@ -121,7 +128,6 @@[m [mexport default function MatchDetailPage() {[m
     updated[index] = parseInt(value) || 0;[m
     setScores(updated);[m
 [m
[31m-    // Prepare object to send to DynamoDB[m
     const updatedPoints = {[m
       q1: updated[0],[m
       q2: updated[1],[m
[36m@@ -136,7 +142,6 @@[m [mexport default function MatchDetailPage() {[m
       }).unwrap();[m
     } catch (err) {[m
       console.error('❌ Failed to update quarter scores:', err);[m
[31m-    // (Optionnel : affiche une erreur UI ici)[m
     }[m
   };[m
 [m
[36m@@ -173,6 +178,10 @@[m [mexport default function MatchDetailPage() {[m
         points: scores.reduce((sum, val) => sum + val, 0),[m
       }).unwrap();[m
 [m
[32m+[m[32m      // Lazy query qui va dispatcher les données directement[m
[32m+[m[32m      const analyzesResult = await getAnalyzes(String(match.timestamp)).unwrap();[m
[32m+[m[32m      dispatch(setAnalyzes(analyzesResult.items)); // 👈 mise à jour Redux[m
[32m+[m
       setAnalysisResult(result.advice.result);[m
     } catch (err) {[m
       console.error('❌ Error generating advice', err);[m
[36m@@ -246,38 +255,82 @@[m [mexport default function MatchDetailPage() {[m
               sx={{ mt: 2 }}[m
               onClick={() => setStatModalOpen(true)}[m
             >[m
[31m-  ➕ Ajouter données[m
[32m+[m[32m              ➕ Add Stats[m
             </Button>[m
           </Paper>[m
         </Grid>[m
 [m
         {/* AI advice section */}[m
         <Grid item xs={12}>[m
[32m+[m[32m          {analyzesData?.items && analyzesData.items.length > 0 && ([m
[32m+[m[32m            <Box[m
[32m+[m[32m              sx={{[m
[32m+[m[32m                display: 'flex',[m
[32m+[m[32m                overflowX: 'auto',[m
[32m+[m[32m                gap: 1,[m
[32m+[m[32m                mb: 2,[m
[32m+[m[32m                p: 1,[m
[32m+[m[32m                '&::-webkit-scrollbar': { height: 6 },[m
[32m+[m[32m                '&::-webkit-scrollbar-thumb': { backgroundColor: '#ccc', borderRadius: 3 },[m
[32m+[m[32m              }}[m
[32m+[m[32m            >[m
[32m+[m[32m              <Button[m
[32m+[m[32m                variant="contained"[m
[32m+[m[32m                onClick={() => setPhaseModalOpen(true)}[m
[32m+[m[32m                disabled={loading}[m
[32m+[m[32m                sx={{[m
[32m+[m[32m                  minWidth: 180,[m
[32m+[m[32m                  flexShrink: 0,[m
[32m+[m[32m                  backgroundColor: 'purple'[m
[32m+[m[32m                }}[m
[32m+[m[32m              >[m
[32m+[m[32m                {loading ? 'Generating...' : 'Generate Advice'}[m
[32m+[m[32m              </Button>[m
[32m+[m[32m              {analyzesData.items.map((analysis) => {[m
[32m+[m[32m                const isSelected = selectedAnalysis?.phase === analysis.phase;[m
[32m+[m[32m                return ([m
[32m+[m[32m                  <Button[m
[32m+[m[32m                    key={analysis['user_id#timestamp']}[m
[32m+[m[32m                    variant={isSelected ? 'contained' : 'outlined'}[m
[32m+[m[32m                    sx={{[m
[32m+[m[32m                      minWidth: 180,[m
[32m+[m[32m                      flexShrink: 0,[m
[32m+[m[32m                      backgroundColor: isSelected ? 'black' : 'white',[m
[32m+[m[32m                      color: isSelected ? 'white' : 'black',[m
[32m+[m[32m                      borderColor: isSelected ? 'black' : '#ddd',[m
[32m+[m[32m                      '&:hover': { backgroundColor: isSelected ? 'black' : '#f5f5f5' },[m
[32m+[m[32m                    }}[m
[32m+[m[32m                    onClick={() => {[m
[32m+[m[32m                      setSelectedAnalysis(analysis);[m
[32m+[m[32m                      setAnal